!function(o){window.GPLimitCheckboxes=function(e){var s=this;for(prop in e)e.hasOwnProperty(prop)&&(s[prop]=e[prop]);s.init=function(){window.GPLimitCheckboxes&&!window.GPLimitCheckboxes.instances&&(window.GPLimitCheckboxes.instances={}),s.bindTriggerEvents(),window.GPLimitCheckboxes.instances[s.formId]=s},s.resetCheckboxElemCache=function(){s.checkboxElemCache={}},s.bindTriggerEvents=function(){for(var e=[],i=o.map(s.triggers,function(e){return e}),t=0;t<i.length;t++)e.push(i[t].selector);var n=o(e.join(", "));s.resetCheckboxElemCache(),n.each(function(){o(this).parents(".gfield").data("gf-disabled-assessed")&&!o(this).hasClass("gf-default-disabled")||o(this).filter(":disabled").addClass("gplc-pre-disabled")}),n.filter('input[id$="select_all"]').addClass("gplc-select-all"),n.change(function(){s.handleCheckboxClick(o(this))}).each(function(){s.handleCheckboxClick(o(this))})},s.handleCheckboxClick=function(e){for(var i=[],t=[],n=void 0!==e?parseInt(e.attr("id").split("_")[2]):null,r=0;r<s.groups.length;r++)if(-1!==s.groups[r].fields.indexOf(n)){var c=gform.applyFilters("gplc_group",o.extend(!0,{},s.groups[r]),n,e,s);s.isGroupMaxed(c)?i=o.merge(i,c.fields):t=o.merge(t,c.fields)}(t=GPLimitCheckboxes.diff(t,i)).length&&s.getCheckboxesByFieldIds(t).not(".gplc-pre-disabled, .gplc-select-all").attr("disabled",!1);if(i.length){var l=s.getCheckboxesByFieldIds(i);l.not(":checked, .gplc-pre-disabled, .gplc-select-all").attr("disabled",!0),l.filter(":checked:disabled:not( .gplc-pre-disabled )").attr("checked",!1).trigger("change")}},s.isGroupMaxed=function(e){var i=0;return o(s.getSelector(e.fields)).filter(":checked:not( .gplc-select-all )").each(function(){var e=this.id.split("_");i+=gform.applyFilters("gplcb_checkbox_count",1,s.formId,parseInt(e[2]),parseInt(e[3]))}),i>=e.max},s.getSelector=function(e){for(var i=[],t=0;t<e.length;t++){var n=e[t];n in s.triggers&&i.push(s.triggers[n].selector)}return i.join(", ")},s.getCheckboxesByFieldIds=function(e){var i=e.join(",");return i in s.checkboxElemCache||(s.checkboxElemCache[i]=o(s.getSelector(e))),s.checkboxElemCache[i]},s.isFieldHidden=function(e){var i=o("#input_"+s.formId+"_"+e);return gformIsHidden(i.children(":first-child"))},GPLimitCheckboxes.diff=function(e,i){return e.filter(function(e){return i.indexOf(e)<0})},s.init()}}(jQuery);
//# sourceMappingURL=gp-limit-checkboxes.js.map